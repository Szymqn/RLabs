plot.subtitle = element_text(hjust = 1, color = "navy"),
axis.title.x.bottom = element_text(size = 12, hjust = .5),
axis.line.x = element_line(arrow = grid::arrow(length = unit(.2, "cm"), ends = "both"), size = .8),
axis.title.y.left = element_text(size = 15, color = "green4", hjust = .5),
axis.text.y.left = element_text(size = 10, color = "green4", hjust = 1, vjust = .3, angle = 65),
axis.line.y.left = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "green4"),
axis.line.y.right = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "orangered3"),
axis.title.y.right = element_text(size = 15, color = "orangered3", hjust = .5, angle = -90),
axis.text.y.right = element_text(size = 10, color = "orangered3", hjust = -0.1, vjust = .3, angle = -80),
panel.background = element_rect()
) +
scale_y_continuous(breaks = seq(350, -350, by = -50),
labels = c(seq(350, 50, -50), seq(0, 350 , 50))) +
scale_x_continuous(labels = dollar,
sec.axis = sec_axis(~., name = "Koszty utrzymania domu", labels = dollar)) +
coord_flip()
p5
p5 <- acsNew %>%
ggplot(aes(x=x)) +
geom_histogram(aes(x = Insurance, y = -..count..), color = "#5ABB41", fill = "#DEFFAC", bins = 65) +
geom_histogram(aes(x = HouseCosts, y = ..count..), color = "#FF534A", fill = "#FFC8B3", bins = 65) +
labs(title = "Podwójny histogram",
x = "Ubezpieczenie domu",
y = "Liczba przypadków",
caption = "Opracowanie własne na podstawie dany J.Landera",
subtitle = "Dane z roku 2002 (plik acsNew.csv).",
) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5, color = "brown", face = "bold.italic"),
plot.subtitle = element_text(hjust = 1, color = "navy"),
axis.title.x.bottom = element_text(size = 12, hjust = .5),
axis.line.x = element_line(arrow = grid::arrow(length = unit(.2, "cm"), ends = "both"), size = .8),
axis.title.y.left = element_text(size = 15, color = "green4", hjust = .5),
axis.text.y.left = element_text(size = 10, color = "green4", hjust = 1, vjust = .3, angle = 65),
axis.line.y.left = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "green4"),
axis.line.y.right = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "orangered3"),
axis.title.y.right = element_text(size = 15, color = "orangered3", hjust = .5, angle = -90),
axis.text.y.right = element_text(size = 10, color = "orangered3", hjust = -0.1, vjust = .3, angle = -80),
panel.background = element_rect()
) +
scale_y_continuous(breaks = seq(350, -350, by = -50),
labels = c(seq(350, 50, -50), seq(0, 350 , 50))) +
scale_x_continuous(labels = dollar,
sec.axis = sec_axis(~., name = "Koszty utrzymania domu", labels = dollar)) +
coord_flip()
p5
p5 <- acsNew %>%
ggplot(aes(x=x)) +
geom_histogram(aes(x = Insurance, y = -..count..), color = "#5ABB41", fill = "#DEFFAC", bins = 65) +
geom_histogram(aes(x = HouseCosts, y = ..count..), color = "#FF534A", fill = "#FFC8B3", bins = 65) +
labs(title = "Podwójny histogram",
x = "Ubezpieczenie domu",
y = "Liczba przypadków",
caption = "Opracowanie własne na podstawie dany J.Landera",
subtitle = "Dane z roku 2002 (plik acsNew.csv).",
) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5, color = "brown", face = "bold.italic"),
plot.subtitle = element_text(hjust = 1, color = "navy"),
axis.title.x.bottom = element_text(size = 12, hjust = .5),
axis.line.x = element_line(arrow = grid::arrow(length = unit(.2, "cm"), ends = "both"), size = .8),
axis.title.y.left = element_text(size = 15, color = "green4", hjust = .5),
axis.text.y.left = element_text(size = 10, color = "green4", hjust = 1, vjust = .3, angle = 65),
axis.line.y.left = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "green4"),
axis.line.y.right = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "orangered3"),
axis.title.y.right = element_text(size = 15, color = "orangered3", hjust = .5, angle = -90),
axis.text.y.right = element_text(size = 10, color = "orangered3", hjust = -0.1, vjust = .3, angle = -80),
panel.background = element_rect()
) +
scale_y_continuous(breaks = seq(350, -350, by = -50),
labels = c(seq(350, 50, -50), seq(0, 350 , 50))) +
scale_x_continuous(labels = dollar,
sec.axis = sec_axis(~., name = "Koszty utrzymania domu", labels = dollar)) +
coord_flip()
library(scales)
library(hrbrthemes)
p5 <- acsNew %>%
ggplot(aes(x=x)) +
geom_histogram(aes(x = Insurance, y = -..count..), color = "#5ABB41", fill = "#DEFFAC", bins = 65) +
geom_histogram(aes(x = HouseCosts, y = ..count..), color = "#FF534A", fill = "#FFC8B3", bins = 65) +
labs(title = "Podwójny histogram",
x = "Ubezpieczenie domu",
y = "Liczba przypadków",
caption = "Opracowanie własne na podstawie dany J.Landera",
subtitle = "Dane z roku 2002 (plik acsNew.csv).",
) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5, color = "brown", face = "bold.italic"),
plot.subtitle = element_text(hjust = 1, color = "navy"),
axis.title.x.bottom = element_text(size = 12, hjust = .5),
axis.line.x = element_line(arrow = grid::arrow(length = unit(.2, "cm"), ends = "both"), size = .8),
axis.title.y.left = element_text(size = 15, color = "green4", hjust = .5),
axis.text.y.left = element_text(size = 10, color = "green4", hjust = 1, vjust = .3, angle = 65),
axis.line.y.left = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "green4"),
axis.line.y.right = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "orangered3"),
axis.title.y.right = element_text(size = 15, color = "orangered3", hjust = .5, angle = -90),
axis.text.y.right = element_text(size = 10, color = "orangered3", hjust = -0.1, vjust = .3, angle = -80),
panel.background = element_rect()
) +
scale_y_continuous(breaks = seq(350, -350, by = -50),
labels = c(seq(350, 50, -50), seq(0, 350 , 50))) +
scale_x_continuous(labels = dollar,
sec.axis = sec_axis(~., name = "Koszty utrzymania domu", labels = dollar)) +
coord_flip()
p5
p1 <- acsNew %>%
group_by(Language) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(prop = count / sum(count) * 100) %>%
mutate(ypos = cumsum(prop) - 0.5 * prop) %>%
mutate(fraction = count / sum(count),
ymax = cumsum(fraction),
ymin = c(0, head(ymax, n = -1)),
angle = c(-50, -35, -70, -80, -85)) %>%
ggplot(aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = Language)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(1, 4)) +
labs(title = "Wykres pierścieniowy rodzin w NY wg języka",
caption = "Źródło: Opracowano własne na podstawie J.Landera",
subtitle = "Dane z roku 2002",
) +
geom_text(aes(x = c(2.55, 2, 2.45, 2.1, 2.65), y = (ymax + ymin) / 2, label = Language, angle = angle), fontface = "bold", size = 5, color = "grey20") +
theme_void() +
theme(plot.title = element_text(hjust = .5, color = "limegreen"),
plot.subtitle = element_text(hjust = 1),
legend.position = "none")
p1
datatable(t_table, caption = 'Tabela: Tablica rozkładu t-Studenta.')
library(tidyverse)
library(DT)
liczbaStopniSwobody <- seq(1, 100, 1)
poziomIstotnosci <- c(seq(0.4, 0.1, -0.1), 0.05, 0.025, 0.02, 0.01, 0.005, 0.001)
rozkladTStudenta <- outer(
liczbaStopniSwobody,
poziomIstotnosci,
function(liczbaStopniSwobody, poziomIstotnosci)
qt(1 - poziomIstotnosci/2, liczbaStopniSwobody)) %>%
matrix(ncol = length(poziomIstotnosci), byrow = FALSE) %>%
round(digits = 9)
rownames(rozkladTStudenta) <- liczbaStopniSwobody
colnames(rozkladTStudenta) <- poziomIstotnosci
datatable(rozkladTStudenta,
caption = 'Tabela: Tablica rozkładu t-Studenta.',
options = list(lengthMenu = c(50, 100)))
library(tidyverse)
library(DT)
x_axis <- c(seq(from = 0.4, to = 0.001, by = -0.1), 0.05, 0.025, 0.02, 0.01, 0.005, 0.001)
y_axis <- c(seq(from = 1, to = 35, by = 1), seq(from = 40, to = 100, by = 5))
rozkladTStudenta <- outer(
x_axis,
y_axis,
function(x_axis, y_axis)
qt(1 - y_axis/2, x_axis)) %>%
matrix(ncol = length(y_axis), byrow = FALSE) %>%
round(digits = 4)
rownames(rozkladTStudenta) <- x_axis
colnames(rozkladTStudenta) <- y_axis
datatable(rozkladTStudenta,
caption = 'Tabela: Tablica rozkładu t-Studenta.',
options = list(lengthMenu = c(50, 100)))
library(tidyverse)
library(DT)
x_axis <- c(seq(from = 0.4, to = 0.001, by = -0.1), 0.05, 0.025, 0.02, 0.01, 0.005, 0.001)
y_axis <- c(seq(from = 1, to = 35, by = 1), seq(from = 40, to = 100, by = 5))
rozkladTStudenta <- outer(
function(x_axis, y_axis)
qt(1 - y_axis/2, x_axis)) %>%
matrix(ncol = length(y_axis), byrow = FALSE) %>%
round(digits = 4)
rownames(rozkladTStudenta) <- x_axis
colnames(rozkladTStudenta) <- y_axis
datatable(rozkladTStudenta,
caption = 'Tabela: Tablica rozkładu t-Studenta.',
options = list(lengthMenu = c(50, 100)))
p5 <- acsNew %>%
ggplot(aes(x=x)) +
geom_histogram(aes(x = Insurance, y = -..count..), color = "#5ABB41", fill = "#DEFFAC", bins = 65) +
geom_histogram(aes(x = HouseCosts, y = ..count..), color = "#FF534A", fill = "#FFC8B3", bins = 65) +
labs(title = "Podwójny histogram",
x = "Ubezpieczenie domu",
y = "Liczba przypadków",
caption = "Opracowanie własne na podstawie dany J.Landera",
subtitle = "Dane z roku 2002 (plik acsNew.csv).",
) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5, color = "brown", face = "bold.italic"),
plot.subtitle = element_text(hjust = 1, color = "navy"),
axis.title.x.bottom = element_text(size = 12, hjust = .5),
axis.line.x = element_line(arrow = grid::arrow(length = unit(.2, "cm"), ends = "both"), size = .8),
axis.title.y.left = element_text(size = 15, color = "green4", hjust = .5),
axis.text.y.left = element_text(size = 10, color = "green4", hjust = 1, vjust = .3, angle = 65),
axis.line.y.left = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "green4"),
axis.line.y.right = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "orangered3"),
axis.title.y.right = element_text(size = 15, color = "orangered3", hjust = .5, angle = -90),
axis.text.y.right = element_text(size = 10, color = "orangered3", hjust = -0.1, vjust = .3, angle = -80),
panel.background = element_rect()
) +
scale_y_continuous(breaks = seq(350, -350, by = -50),
labels = c(seq(350, 50, -50), seq(0, 350 , 50))) +
scale_x_continuous(labels = dollar,
sec.axis = sec_axis(~., name = "Koszty utrzymania domu", labels = dollar)) +
coord_flip()
p5
library(tidyverse)
library(ggplot2)
library(readr)
acsNew <- read_csv("./acsNew.csv", show_col_types = FALSE)
library(scales)
library(hrbrthemes)
p5 <- acsNew %>%
ggplot(aes(x=x)) +
geom_histogram(aes(x = Insurance, y = -..count..), color = "#5ABB41", fill = "#DEFFAC", bins = 65) +
geom_histogram(aes(x = HouseCosts, y = ..count..), color = "#FF534A", fill = "#FFC8B3", bins = 65) +
labs(title = "Podwójny histogram",
x = "Ubezpieczenie domu",
y = "Liczba przypadków",
caption = "Opracowanie własne na podstawie dany J.Landera",
subtitle = "Dane z roku 2002 (plik acsNew.csv).",
) +
theme_linedraw() +
theme(plot.title = element_text(hjust = .5, color = "brown", face = "bold.italic"),
plot.subtitle = element_text(hjust = 1, color = "navy"),
axis.title.x.bottom = element_text(size = 12, hjust = .5),
axis.line.x = element_line(arrow = grid::arrow(length = unit(.2, "cm"), ends = "both"), size = .8),
axis.title.y.left = element_text(size = 15, color = "green4", hjust = .5),
axis.text.y.left = element_text(size = 10, color = "green4", hjust = 1, vjust = .3, angle = 65),
axis.line.y.left = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "green4"),
axis.line.y.right = element_line(arrow = grid::arrow(length = unit(.3, "cm"), ends = "last", type = "closed"), size = 1, color = "orangered3"),
axis.title.y.right = element_text(size = 15, color = "orangered3", hjust = .5, angle = -90),
axis.text.y.right = element_text(size = 10, color = "orangered3", hjust = -0.1, vjust = .3, angle = -80),
panel.background = element_rect()
) +
scale_y_continuous(breaks = seq(350, -350, by = -50),
labels = c(seq(350, 50, -50), seq(0, 350 , 50))) +
scale_x_continuous(labels = dollar,
sec.axis = sec_axis(~., name = "Koszty utrzymania domu", labels = dollar)) +
coord_flip()
p5
p1 <- acsNew %>%
group_by(Language) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(prop = count / sum(count) * 100) %>%
mutate(ypos = cumsum(prop) - 0.5 * prop) %>%
mutate(fraction = count / sum(count),
ymax = cumsum(fraction),
ymin = c(0, head(ymax, n = -1)),
angle = c(-50, -35, -70, -80, -85)) %>%
ggplot(aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = Language)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(1, 4)) +
labs(title = "Wykres pierścieniowy rodzin w NY wg języka",
caption = "Źródło: Opracowano własne na podstawie J.Landera",
subtitle = "Dane z roku 2002",
) +
geom_text(aes(x = c(2.55, 2, 2.45, 2.1, 2.65), y = (ymax + ymin) / 2, label = Language, angle = angle), fontface = "bold", size = 5, color = "grey20") +
theme_void() +
theme(plot.title = element_text(hjust = .5, color = "limegreen"),
plot.subtitle = element_text(hjust = 1),
legend.position = "none")
p1
p5
p1 <- acsNew %>%
group_by(Language) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
mutate(prop = count / sum(count) * 100) %>%
mutate(ypos = cumsum(prop) - 0.5 * prop) %>%
mutate(fraction = count / sum(count),
ymax = cumsum(fraction),
ymin = c(0, head(ymax, n = -1)),
angle = c(-50, -35, -70, -80, -85)) %>%
ggplot(aes(ymax = ymax, ymin = ymin, xmax = 4, xmin = 3, fill = Language)) +
geom_rect() +
coord_polar(theta = "y") +
xlim(c(1, 4)) +
labs(title = "Wykres pierścieniowy rodzin w NY wg języka",
caption = "Źródło: Opracowano własne na podstawie J.Landera",
subtitle = "Dane z roku 2002",
) +
geom_text(aes(x = c(2.55, 2, 2.45, 2.1, 2.65), y = (ymax + ymin) / 2, label = Language, angle = angle), fontface = "bold", size = 5, color = "grey20") +
theme_void() +
theme(plot.title = element_text(hjust = .5, color = "limegreen"),
plot.subtitle = element_text(hjust = 1),
legend.position = "none")
p1
library(tidyverse)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv")
library(tidyverse)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv",
col_types = cols(ElectricBill = col_integer(),
FamilyIncome = col_integer(),
FamilyType = col_factor(levels = c("Married", "Female Head", "Male Head")),
HouseCosts = col_integer(),
Insurance = col_integer(),
NumBedrooms = col_integer(),
NumChildren = col_integer(),
NumPeople = col_integer(),
NumRooms = col_integer(),
NumVehicles = col_integer(),
NumWorkers = col_integer()))str_cols <- sapply(acsnNew, is.character)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv",
col_types = cols(ElectricBill = col_integer(),
FamilyIncome = col_integer(),
FamilyType = col_factor(levels = c("Married", "Female Head", "Male Head")),
HouseCosts = col_integer(),
Insurance = col_integer(),
NumBedrooms = col_integer(),
NumChildren = col_integer(),
NumPeople = col_integer(),
NumRooms = col_integer(),
NumVehicles = col_integer(),
NumWorkers = col_integer()))str_cols <- sapply(acsnNew, is.character)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv",
col_types = cols(ElectricBill = col_integer(),
FamilyIncome = col_integer(),
FamilyType = col_factor(levels = c("Married", "Female Head", "Male Head")),
HouseCosts = col_integer(),
Insurance = col_integer(),
NumBedrooms = col_integer(),
NumChildren = col_integer(),
NumPeople = col_integer(),
NumRooms = col_integer(),
NumVehicles = col_integer(),
NumWorkers = col_integer()))
library(tidyverse)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv",
col_types = cols(ElectricBill = col_integer(),
FamilyIncome = col_integer(),
FamilyType = col_factor(levels = c("Married", "Female Head", "Male Head")),
HouseCosts = col_integer(),
Insurance = col_integer(),
NumBedrooms = col_integer(),
NumChildren = col_integer(),
NumPeople = col_integer(),
NumRooms = col_integer(),
NumVehicles = col_integer(),
NumWorkers = col_integer()))
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv")
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv", show_col_types = FALSE)
# przekonwertuj zmienne typu znakowego na czynniki
acsnNew[str_cols] <- lapply(acsnNew[str_cols], factor)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv", show_col_types = FALSE)
summarise(acsNY)
acsNY <- read_csv("https://jaredlander.com/data/acs_ny.csv")
summarise(acsNY)
library(tidyverse)
library(readr)
acsNew <- read_csv("./acsNew.csv", show_col_types = FALSE)
summary(acsNew)
# przekonwertuj zmienne typu znakowego na czynniki
acsnNew[str_cols] <- lapply(acsnNew[str_cols], factor)
# przekonwertuj zmienne typu znakowego na czynniki
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
acsNew <- read_csv("./acsNew.csv")
summary(acsNew)
# przekonwertuj zmienne typu znakowego na czynniki
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
library(tidyverse)
library(readr)
acsNew <- read_csv("./acsNew.csv")
summary(acsNew)
str_cols <- sapply(acsNew, is.character)
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
acsNew
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
rm(list = ls())
library(tidyverse)
library(readr)
acsNew <- read_csv("./acsNew.csv")
summary(acsNew)
str_cols <- sapply(acsNew, is.character)
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
set.seed(7042022)
mean(x)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
set.seed(7042022)
x <- rnorm(1000, mean = 7, sd = 2)
mean(x)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
mean(acsNew[FamilyIncome])
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
summary(acsNew)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
acsNew[FamilyIncome]
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
acsNew['FamilyIncome']
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- acsNew['FamilyIncome']
x
rm(list = ls())
library(tidyverse)
library(readr)
acsNew <- read_csv("./acsNew.csv")
str_cols <- sapply(acsNew, is.character)
acsNew[str_cols] <- lapply(acsNew[str_cols], factor)
summary(acsNew)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- acsNew['FamilyIncome']
x
mean(x)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- acsNew['FamilyIncome']
x
mean(x)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- na.omnit(acsNew['FamilyIncome'])
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- na.omit(acsNew['FamilyIncome'])
x
mean(x)
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- acsNew['FamilyIncome']
x
View(acsNew)
View(acsNew)
type(x)
x
mean(x)
x
typeof(x)
x
mean(unlist(x))
# Dla zmiennej FamilyIncome wyznacz wszystkie możliwe parametry liczbowe i pozycyjne.
x <- unlist(acsNew['FamilyIncome'])
x
mean(x)
var(x)
sd(x)
IQR(x)
quantile(x)
min(x)
max(x)
range(x)
(mz_3 <- e1071::moment(x = x, order = 3, na.rm = TRUE))
library(e1071)
(mz_3 <- e1071::moment(x = x, order = 3, na.rm = TRUE))
(mz_3 <- e1071::moment(x = x, order = 3, na.rm = TRUE))
(mz_4 <- e1071::moment(x = x, order = 4, na.rm = TRUE))
(mz_3 <- e1071::moment(x = x, order = 3, na.rm = TRUE))
(mz_4 <- e1071::moment(x = x, order = 4, na.rm = TRUE))
(ma_4 <- e1071::moment(x = x, order = 4, absolute = TRUE, na.rm = TRUE))
(mc_4 <- e1071::moment(x = x, order = 4, center = TRUE, na.rm = TRUE))
(mac_4 <- e1071::moment(x = x, order = 4, center = TRUE, absolute = TRUE, na.rm = TRUE))
(ma_3 <- e1071::moment(x = x, order = 3, absolute = TRUE, na.rm = TRUE))
(mc_3 <- e1071::moment(x = x, order = 3, center = TRUE, na.rm = TRUE))
(mac_3 <- e1071::moment(x = x, order = 3, center = TRUE, absolute = TRUE, na.rm = TRUE))
# Parametry pozycyjne
quantile(x)
(Me <- quantile(x, .5))
(q1q3 <- quantile(x, c(.25, .75)))
names(q1q3) <- NULL
q1q3
quantile(x, seq(.1, .9, .1))
quantile(x, seq(.01, .99, .01))
DescTools::Mode(x)
(Q <- (quantile(x, .75) - quantile(x, .25)) / 2 )
(Q <- as.numeric((quantile(x, .75) - quantile(x, .25)) / 2 ))
(Q <- IQR(x) / 2)
(odch_st_pop <- sqrt(e1071::moment(x = x, order = 2, center = TRUE, na.rm = TRUE)))
(odch_st_pr <-  sd(x))
(odch_p <- e1071::moment(x, center = TRUE, absolute = TRUE, na.rm = TRUE))
# 17) T_Q = (Me-Q, Me+Q)
T_Q <- 1
# 17) T_Q = (Me-Q, Me+Q)
T_Q <- c(Me-Q, Me+Q)
T_Q
# 17) T_Q = (Me-Q, Me+Q)
T_Q <- names(c(Me-Q, Me+Q)) <- NULL
T_Q
# 17) T_Q = (Me-Q, Me+Q)
T_Q <- c(Me-Q, Me+Q)
names(T_Q) <- NULL
T_Q
(srednia <- mean(x))
(typowy_obszar_zmiennosci <- list(populacyjny = list(LeftEnd = srednia - odch_st_pop,
RightEnd = srednia + odch_st_pop),
probkowy = list(LeftEnd = srednia - odch_st_pr,
RightEnd = srednia + odch_st_pr),
przecietny = list(LeftEnd = srednia - odch_p,
RightEnd = srednia + odch_p)
))
(typowy_obszar_zmiennosci <- list(populacyjny = list(LeftEnd = srednia - odch_st_pop,
RightEnd = srednia + odch_st_pop),
probkowy = list(LeftEnd = srednia - odch_st_pr,
RightEnd = srednia + odch_st_pr),
przecietny = list(LeftEnd = srednia - odch_p,
RightEnd = srednia + odch_p)
))
(wspolczynnik_aymetrii <- list(populacyjny = mc_3 / ((odch_st_pop)^3),
probkowy = mc_3 / (odch_st_pr)^3))
(wspolczynnik_aymetrii <- list(populacyjny = mc_3 / ((odch_st_pop)^3),
probkowy = mc_3 / (odch_st_pr)^3))
# 17) T_Q = (Me-Q, Me+Q)
D17 <- c(Me-Q, Me+Q)
names(D17) <- NULL
D17
(typowy_obszar_zmiennosci <- list(populacyjny = list(LeftEnd = srednia - odch_st_pop,
RightEnd = srednia + odch_st_pop),
probkowy = list(LeftEnd = srednia - odch_st_pr,
RightEnd = srednia + odch_st_pr),
przecietny = list(LeftEnd = srednia - odch_p,
RightEnd = srednia + odch_p)
))
(wspolczynnik_koncentracji <- list(populacyjny = mc_4 / war_pop^2,
probkowy = mc_4 / war_pr^2))
(wspolczynnik_aymetrii <- list(populacyjny = mc_3 / ((odch_st_pop)^3),
probkowy = mc_3 / (odch_st_pr)^3))
